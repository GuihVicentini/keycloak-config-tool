{
  "id": "test-2",
  "realm": "test-2",
  "displayName": "test-2 realm",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "name": "create-realm",
        "description": null,
        "composite": false,
        "composites": {
          "realm": [],
          "client": {}
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      },
      {
        "name": "default-roles-test-2",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      },
      {
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "composites": {
          "realm": [],
          "client": {}
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      },
      {
        "name": "test-2-realm-composite-role",
        "description": "test-2 realm composite role",
        "composite": true,
        "composites": {
          "realm": [
            "test-2-realm-role"
          ],
          "client": {}
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      },
      {
        "name": "test-2-realm-role",
        "description": "test-2 realm role",
        "composite": false,
        "composites": {
          "realm": [],
          "client": {}
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      },
      {
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "composites": {
          "realm": [],
          "client": {}
        },
        "clientRole": false,
        "containerId": "test-2",
        "attributes": {}
      }
    ],
    "client": {
      "account": [
        {
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        },
        {
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "account",
          "attributes": {}
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "broker",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "realm-management": [
                "create-client",
                "impersonation",
                "manage-authorization",
                "manage-clients",
                "manage-events",
                "manage-identity-providers",
                "manage-realm",
                "manage-users",
                "query-clients",
                "query-groups",
                "query-realms",
                "query-users",
                "view-authorization",
                "view-clients",
                "view-events",
                "view-identity-providers",
                "view-realm",
                "view-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        },
        {
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "realm-management",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "test-2-client": [
        {
          "name": "test-2-client-composite-role",
          "description": "test-2 client composite role",
          "composite": true,
          "composites": {
            "realm": [],
            "client": {
              "test-2-client": [
                "test-2-client-role"
              ]
            }
          },
          "clientRole": true,
          "containerId": "test-2-client",
          "attributes": {}
        },
        {
          "name": "test-2-client-role",
          "description": "test-2 client role",
          "composite": false,
          "composites": {
            "realm": [],
            "client": {}
          },
          "clientRole": true,
          "containerId": "test-2-client",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "name": "test-2-group",
      "path": "/test-2-group",
      "access": {
        "manage": true,
        "manageMembership": true,
        "view": true
      },
      "attributes": {
        "test-2": [
          "test-2"
        ],
        "toto": [
          "toto"
        ]
      },
      "realmRoles": [
        "create-realm"
      ],
      "clientRoles": {
        "account": [
          "delete-account",
          "manage-account",
          "manage-account-links"
        ]
      },
      "subGroups": [
        {
          "name": "test-2-group-child",
          "path": "/test-2-group/test-2-group-child",
          "access": null,
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    }
  ],
  "defaultRole": {
    "name": "default-roles-test-2",
    "description": "${role_default-roles}",
    "composite": true,
    "composites": {
      "realm": [],
      "client": {}
    },
    "clientRole": false,
    "containerId": "test-2",
    "attributes": {}
  },
  "defaultGroups": [],
  "passwordPolicy": null,
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttest-2ationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttest-2ationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [],
  "clientScopeMappings": {},
  "clients": [
    {
      "clientId": "account",
      "name": "${client_account}",
      "description": null,
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/test-2/account/",
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [
        "/realms/test-2/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "account-console",
      "name": "${client_account-console}",
      "description": null,
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/test-2/account/",
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [
        "/realms/test-2/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "description": null,
      "rootUrl": null,
      "baseUrl": null,
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "broker",
      "name": "${client_broker}",
      "description": null,
      "rootUrl": null,
      "baseUrl": null,
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "description": null,
      "rootUrl": null,
      "baseUrl": null,
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "description": null,
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/test-2/console/",
      "adminUrl": null,
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [
        "/admin/test-2/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    },
    {
      "clientId": "test-2-client",
      "name": "test-2 Client",
      "description": "Some description",
      "rootUrl": "",
      "baseUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "defaultRoles": [],
      "redirectUris": [
        "",
        "/test-2ing"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "require.pushed.authorization.requests": "false",
        "tls-client-certificate-bound-access-tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "test-2-flow"
      },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "acr",
        "email",
        "profile",
        "roles",
        "test-2-client-scope",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "access": {
        "configure": true,
        "manage": true,
        "view": true
      }
    }
  ],
  "clientScopes": [],
  "defaultClientScopes": [],
  "optionalClientScopes": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "smtpServer": {
    "auth": "true",
    "envelopeFrom": "",
    "from": "test-2@test-2.com",
    "fromDisplayName": "test-2 email address",
    "host": "some.host.com",
    "port": "465",
    "replyTo": "test-2@test-2.com",
    "replyToDisplayName": "test-2",
    "ssl": "false",
    "starttls": "true",
    "user": "some.user@users.com"
  },
  "loginTheme": null,
  "accountTheme": null,
  "adminTheme": null,
  "emailTheme": null,
  "eventsEnabled": false,
  "eventsExpiration": null,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "test-2-oidc",
      "displayName": "test-2 provider",
      "providerId": "oidc",
      "enabled": true,
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "postBrokerLoginFlowAlias": null,
      "config": {
        "acceptsPromptNoneForwardFromClient": "false",
        "allowedClockSkew": "0",
        "authorizationUrl": "https://someurl.com/auth",
        "backchannelSupported": "false",
        "clientAuthMethod": "private_key_jwt",
        "clientId": "test-2-client-id",
        "disableUserInfo": "false",
        "hideOnLoginPage": "false",
        "jwksUrl": "https://someurl.com/jwks",
        "loginHint": "false",
        "passMaxAge": "false",
        "pkceEnabled": "false",
        "syncMode": "IMPORT",
        "tokenUrl": "https://someurl.com/token",
        "uiLocales": "false",
        "useJwksUrl": "true",
        "validateSignature": "true"
      },
      "mappers": [
        {
          "name": "test-2-idp-mapper",
          "identityProviderAlias": "test-2-oidc",
          "identityProviderMapper": "oidc-advanced-role-idp-mapper",
          "config": {
            "claims": "[{\"key\":\"acr\",\"value\":\"strong\"},{\"key\":\"roles\",\"value\":\"someclaimvalue\"}]",
            "syncMode": "INHERIT",
            "are.claim.values.regex": "false",
            "attributes": "[]",
            "role": "test-2-realm-composite-role"
          }
        }
      ]
    }
  ],
  "identityProviderMappers": [
    {
      "name": "test-2-idp-mapper",
      "identityProviderAlias": "test-2-oidc",
      "identityProviderMapper": "oidc-advanced-role-idp-mapper",
      "config": {
        "are.claim.values.regex": "false",
        "attributes": "[]",
        "claims": "[{\"key\":\"acr\",\"value\":\"strong\"},{\"key\":\"roles\",\"value\":\"someclaimvalue\"}]",
        "role": "test-2-realm-composite-role",
        "syncMode": "INHERIT"
      }
    }
  ],
  "ldapProviders": [
    {
      "name": "test-2-ldap",
      "providerId": "ldap",
      "providerType": "org.keycloak.storage.UserStorageProvider",
      "subType": null,
      "subComponents": [
        {
          "name": "creation date",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "true"
            ],
            "is.mandatory.in.ldap": [
              "false"
            ],
            "ldap.attribute": [
              "createTimestamp"
            ],
            "read.only": [
              "true"
            ],
            "user.model.attribute": [
              "createTimestamp"
            ]
          }
        },
        {
          "name": "email",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "false"
            ],
            "is.mandatory.in.ldap": [
              "false"
            ],
            "ldap.attribute": [
              "mail"
            ],
            "read.only": [
              "false"
            ],
            "user.model.attribute": [
              "email"
            ]
          }
        },
        {
          "name": "first name",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "true"
            ],
            "is.mandatory.in.ldap": [
              "true"
            ],
            "ldap.attribute": [
              "cn"
            ],
            "read.only": [
              "false"
            ],
            "user.model.attribute": [
              "firstName"
            ]
          }
        },
        {
          "name": "last name",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "true"
            ],
            "is.mandatory.in.ldap": [
              "true"
            ],
            "ldap.attribute": [
              "sn"
            ],
            "read.only": [
              "false"
            ],
            "user.model.attribute": [
              "lastName"
            ]
          }
        },
        {
          "name": "modify date",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "true"
            ],
            "is.mandatory.in.ldap": [
              "false"
            ],
            "ldap.attribute": [
              "modifyTimestamp"
            ],
            "read.only": [
              "true"
            ],
            "user.model.attribute": [
              "modifyTimestamp"
            ]
          }
        },
        {
          "name": "username",
          "providerId": "user-attribute-ldap-mapper",
          "providerType": "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
          "subType": null,
          "subComponents": [],
          "config": {
            "always.read.value.from.ldap": [
              "false"
            ],
            "is.mandatory.in.ldap": [
              "true"
            ],
            "ldap.attribute": [
              "uid"
            ],
            "read.only": [
              "false"
            ],
            "user.model.attribute": [
              "username"
            ]
          }
        }
      ],
      "config": {
        "allowKerberosAuthentication": [
          "false"
        ],
        "authType": [
          "simple"
        ],
        "bindDn": [
          "uid=ServiceUser,ou=ServiceGroup,dc=somedc,dc=com"
        ],
        "cachePolicy": [
          "DEFAULT"
        ],
        "changedSyncPeriod": [
          "-1"
        ],
        "connectionPooling": [
          "false"
        ],
        "connectionUrl": [
          "ldaps://somedirectory.com"
        ],
        "editMode": [
          "WRITABLE"
        ],
        "enabled": [
          "true"
        ],
        "fullSyncPeriod": [
          "-1"
        ],
        "importEnabled": [
          "true"
        ],
        "pagination": [
          "false"
        ],
        "rdnLDAPAttribute": [
          "uid"
        ],
        "startTls": [
          "false"
        ],
        "syncRegistrations": [
          "true"
        ],
        "trustEmail": [
          "false"
        ],
        "useKerberosForPasswordAuthentication": [
          "false"
        ],
        "usePasswordModifyExtendedOp": [
          "false"
        ],
        "useTruststoreSpi": [
          "ldapsOnly"
        ],
        "userObjectClasses": [
          "inetOrgPerson, organizationalPerson"
        ],
        "usernameLDAPAttribute": [
          "uid"
        ],
        "usersDn": [
          "ou=Users,ou=Tenant,dc=domain,dc=com"
        ],
        "uuidLDAPAttribute": [
          "entryUUID"
        ],
        "validatePasswordPolicy": [
          "false"
        ],
        "vendor": [
          "other"
        ]
      }
    }
  ],
  "keyProviders": [
    {
      "name": "aes-generated",
      "providerId": "aes-generated",
      "providerType": "org.keycloak.keys.KeyProvider",
      "subType": null,
      "subComponents": [],
      "config": {
        "priority": [
          "100"
        ]
      }
    },
    {
      "name": "hmac-generated",
      "providerId": "hmac-generated",
      "providerType": "org.keycloak.keys.KeyProvider",
      "subType": null,
      "subComponents": [],
      "config": {
        "algorithm": [
          "HS256"
        ],
        "priority": [
          "100"
        ]
      }
    },
    {
      "name": "rsa-enc-generated",
      "providerId": "rsa-enc-generated",
      "providerType": "org.keycloak.keys.KeyProvider",
      "subType": null,
      "subComponents": [],
      "config": {
        "algorithm": [
          "RSA-OAEP"
        ],
        "priority": [
          "100"
        ]
      }
    },
    {
      "name": "rsa-generated",
      "providerId": "rsa-generated",
      "providerType": "org.keycloak.keys.KeyProvider",
      "subType": null,
      "subComponents": [],
      "config": {
        "priority": [
          "100"
        ]
      }
    }
  ],
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "defaultLocale": null,
  "authenticationFlows": [
    {
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-cookie"
        },
        {
          "providerId": "auth-spnego",
          "requirement": "DISABLED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-spnego"
        },
        {
          "providerId": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "identity-provider-redirector"
        },
        {
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "requirement": "ALTERNATIVE",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "auth-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-username-password-form"
            },
            {
              "alias": "Browser - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "requirement": "CONDITIONAL",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "auth-username-password-form",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-username-password-form"
        },
        {
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "requirement": "CONDITIONAL",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "conditional-user-configured",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "conditional-user-configured"
        },
        {
          "providerId": "auth-otp-form",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-otp-form"
        }
      ]
    },
    {
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "client-secret",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "client-secret"
        },
        {
          "providerId": "client-jwt",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "client-jwt"
        },
        {
          "providerId": "client-secret-jwt",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "client-secret-jwt"
        },
        {
          "providerId": "client-x509",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "client-x509"
        }
      ]
    },
    {
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "direct-grant-validate-username"
        },
        {
          "providerId": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "direct-grant-validate-password"
        },
        {
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "requirement": "CONDITIONAL",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "direct-grant-validate-otp",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "direct-grant-validate-otp"
            }
          ]
        },
        {
          "providerId": "conditional-user-configured",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "conditional-user-configured"
        },
        {
          "providerId": "direct-grant-validate-otp",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "direct-grant-validate-otp"
        }
      ]
    },
    {
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "docker-http-basic-authenticator"
        }
      ]
    },
    {
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "idp-review-profile",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": {
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          },
          "alias": "idp-review-profile"
        },
        {
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "requirement": "REQUIRED",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "idp-create-user-if-unique",
              "requirement": "ALTERNATIVE",
              "authenticationFlow": false,
              "config": {
                "alias": "create unique user config",
                "config": {
                  "require.password.update.after.registration": "false"
                }
              },
              "alias": "idp-create-user-if-unique"
            },
            {
              "alias": "Handle Existing Account",
              "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
              "requirement": "ALTERNATIVE",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-confirm-link",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-confirm-link"
                },
                {
                  "alias": "Account verification options",
                  "description": "Method with which to verity the existing account",
                  "requirement": "REQUIRED",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "idp-email-verification",
                      "requirement": "ALTERNATIVE",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "idp-email-verification"
                    },
                    {
                      "alias": "Verify Existing Account by Re-authentication",
                      "description": "Reauthentication of existing account",
                      "requirement": "ALTERNATIVE",
                      "providerId": "basic-flow",
                      "authenticationFlow": true,
                      "subFlowsAndExecutions": [
                        {
                          "providerId": "idp-username-password-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "idp-username-password-form"
                        },
                        {
                          "alias": "First broker login - Conditional OTP",
                          "description": "Flow to determine if the OTP is required for the authentication",
                          "requirement": "CONDITIONAL",
                          "providerId": "basic-flow",
                          "authenticationFlow": true,
                          "subFlowsAndExecutions": [
                            {
                              "providerId": "conditional-user-configured",
                              "requirement": "REQUIRED",
                              "authenticationFlow": false,
                              "config": null,
                              "alias": "conditional-user-configured"
                            },
                            {
                              "providerId": "auth-otp-form",
                              "requirement": "REQUIRED",
                              "authenticationFlow": false,
                              "config": null,
                              "alias": "auth-otp-form"
                            }
                          ]
                        },
                        {
                          "providerId": "conditional-user-configured",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "conditional-user-configured"
                        },
                        {
                          "providerId": "auth-otp-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "auth-otp-form"
                        }
                      ]
                    },
                    {
                      "providerId": "idp-username-password-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "idp-username-password-form"
                    },
                    {
                      "alias": "First broker login - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "requirement": "CONDITIONAL",
                      "providerId": "basic-flow",
                      "authenticationFlow": true,
                      "subFlowsAndExecutions": [
                        {
                          "providerId": "conditional-user-configured",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "conditional-user-configured"
                        },
                        {
                          "providerId": "auth-otp-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "auth-otp-form"
                        }
                      ]
                    },
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "idp-email-verification",
                  "requirement": "ALTERNATIVE",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-email-verification"
                },
                {
                  "alias": "Verify Existing Account by Re-authentication",
                  "description": "Reauthentication of existing account",
                  "requirement": "ALTERNATIVE",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "idp-username-password-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "idp-username-password-form"
                    },
                    {
                      "alias": "First broker login - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "requirement": "CONDITIONAL",
                      "providerId": "basic-flow",
                      "authenticationFlow": true,
                      "subFlowsAndExecutions": [
                        {
                          "providerId": "conditional-user-configured",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "conditional-user-configured"
                        },
                        {
                          "providerId": "auth-otp-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "auth-otp-form"
                        }
                      ]
                    },
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-confirm-link",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-confirm-link"
            },
            {
              "alias": "Account verification options",
              "description": "Method with which to verity the existing account",
              "requirement": "REQUIRED",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-email-verification",
                  "requirement": "ALTERNATIVE",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-email-verification"
                },
                {
                  "alias": "Verify Existing Account by Re-authentication",
                  "description": "Reauthentication of existing account",
                  "requirement": "ALTERNATIVE",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "idp-username-password-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "idp-username-password-form"
                    },
                    {
                      "alias": "First broker login - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "requirement": "CONDITIONAL",
                      "providerId": "basic-flow",
                      "authenticationFlow": true,
                      "subFlowsAndExecutions": [
                        {
                          "providerId": "conditional-user-configured",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "conditional-user-configured"
                        },
                        {
                          "providerId": "auth-otp-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "auth-otp-form"
                        }
                      ]
                    },
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-email-verification",
              "requirement": "ALTERNATIVE",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-email-verification"
            },
            {
              "alias": "Verify Existing Account by Re-authentication",
              "description": "Reauthentication of existing account",
              "requirement": "ALTERNATIVE",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-username-password-form"
            },
            {
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "requirement": "CONDITIONAL",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": {
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          "alias": "idp-create-user-if-unique"
        },
        {
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "requirement": "ALTERNATIVE",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "idp-confirm-link",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-confirm-link"
            },
            {
              "alias": "Account verification options",
              "description": "Method with which to verity the existing account",
              "requirement": "REQUIRED",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-email-verification",
                  "requirement": "ALTERNATIVE",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-email-verification"
                },
                {
                  "alias": "Verify Existing Account by Re-authentication",
                  "description": "Reauthentication of existing account",
                  "requirement": "ALTERNATIVE",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "idp-username-password-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "idp-username-password-form"
                    },
                    {
                      "alias": "First broker login - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "requirement": "CONDITIONAL",
                      "providerId": "basic-flow",
                      "authenticationFlow": true,
                      "subFlowsAndExecutions": [
                        {
                          "providerId": "conditional-user-configured",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "conditional-user-configured"
                        },
                        {
                          "providerId": "auth-otp-form",
                          "requirement": "REQUIRED",
                          "authenticationFlow": false,
                          "config": null,
                          "alias": "auth-otp-form"
                        }
                      ]
                    },
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-email-verification",
              "requirement": "ALTERNATIVE",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-email-verification"
            },
            {
              "alias": "Verify Existing Account by Re-authentication",
              "description": "Reauthentication of existing account",
              "requirement": "ALTERNATIVE",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-username-password-form"
            },
            {
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "requirement": "CONDITIONAL",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "idp-confirm-link",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "idp-confirm-link"
        },
        {
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "requirement": "REQUIRED",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "idp-email-verification",
              "requirement": "ALTERNATIVE",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-email-verification"
            },
            {
              "alias": "Verify Existing Account by Re-authentication",
              "description": "Reauthentication of existing account",
              "requirement": "ALTERNATIVE",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "idp-username-password-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "idp-username-password-form"
                },
                {
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "requirement": "CONDITIONAL",
                  "providerId": "basic-flow",
                  "authenticationFlow": true,
                  "subFlowsAndExecutions": [
                    {
                      "providerId": "conditional-user-configured",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "conditional-user-configured"
                    },
                    {
                      "providerId": "auth-otp-form",
                      "requirement": "REQUIRED",
                      "authenticationFlow": false,
                      "config": null,
                      "alias": "auth-otp-form"
                    }
                  ]
                },
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "idp-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-username-password-form"
            },
            {
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "requirement": "CONDITIONAL",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "idp-email-verification"
        },
        {
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "requirement": "ALTERNATIVE",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "idp-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "idp-username-password-form"
            },
            {
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "requirement": "CONDITIONAL",
              "providerId": "basic-flow",
              "authenticationFlow": true,
              "subFlowsAndExecutions": [
                {
                  "providerId": "conditional-user-configured",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "conditional-user-configured"
                },
                {
                  "providerId": "auth-otp-form",
                  "requirement": "REQUIRED",
                  "authenticationFlow": false,
                  "config": null,
                  "alias": "auth-otp-form"
                }
              ]
            },
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "idp-username-password-form",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "idp-username-password-form"
        },
        {
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "requirement": "CONDITIONAL",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "auth-otp-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-otp-form"
            }
          ]
        },
        {
          "providerId": "conditional-user-configured",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "conditional-user-configured"
        },
        {
          "providerId": "auth-otp-form",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-otp-form"
        }
      ]
    },
    {
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "no-cookie-redirect",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "no-cookie-redirect"
        },
        {
          "alias": "Authentication Options",
          "description": "Authentication options.",
          "requirement": "REQUIRED",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "basic-auth",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "basic-auth"
            },
            {
              "providerId": "basic-auth-otp",
              "requirement": "DISABLED",
              "authenticationFlow": false,
              "config": null,
              "alias": "basic-auth-otp"
            },
            {
              "providerId": "auth-spnego",
              "requirement": "DISABLED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-spnego"
            }
          ]
        },
        {
          "providerId": "basic-auth",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "basic-auth"
        },
        {
          "providerId": "basic-auth-otp",
          "requirement": "DISABLED",
          "authenticationFlow": false,
          "config": null,
          "alias": "basic-auth-otp"
        },
        {
          "providerId": "auth-spnego",
          "requirement": "DISABLED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-spnego"
        }
      ]
    },
    {
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "alias": "registration form",
          "description": "registration form",
          "requirement": "REQUIRED",
          "providerId": "form-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "registration-user-creation",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "registration-user-creation"
            },
            {
              "providerId": "registration-profile-action",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "registration-profile-action"
            },
            {
              "providerId": "registration-password-action",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "registration-password-action"
            },
            {
              "providerId": "registration-recaptcha-action",
              "requirement": "DISABLED",
              "authenticationFlow": false,
              "config": null,
              "alias": "registration-recaptcha-action"
            }
          ]
        },
        {
          "providerId": "registration-user-creation",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "registration-user-creation"
        },
        {
          "providerId": "registration-profile-action",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "registration-profile-action"
        },
        {
          "providerId": "registration-password-action",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "registration-password-action"
        },
        {
          "providerId": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "authenticationFlow": false,
          "config": null,
          "alias": "registration-recaptcha-action"
        }
      ]
    },
    {
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "builtIn": true,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "reset-credentials-choose-user"
        },
        {
          "providerId": "reset-credential-email",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "reset-credential-email"
        },
        {
          "providerId": "reset-password",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "reset-password"
        },
        {
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "requirement": "CONDITIONAL",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "conditional-user-configured",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "conditional-user-configured"
            },
            {
              "providerId": "reset-otp",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "reset-otp"
            }
          ]
        },
        {
          "providerId": "conditional-user-configured",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "conditional-user-configured"
        },
        {
          "providerId": "reset-otp",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "reset-otp"
        }
      ]
    },
    {
      "alias": "test-2-flow",
      "description": "test-2 flow",
      "providerId": "basic-flow",
      "builtIn": false,
      "topLevel": true,
      "subFlowsAndExecutions": [
        {
          "providerId": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-cookie"
        },
        {
          "alias": "test-2-sub-flow",
          "description": "test-2 subflow",
          "requirement": "ALTERNATIVE",
          "providerId": "basic-flow",
          "authenticationFlow": true,
          "subFlowsAndExecutions": [
            {
              "providerId": "auth-username-password-form",
              "requirement": "REQUIRED",
              "authenticationFlow": false,
              "config": null,
              "alias": "auth-username-password-form"
            }
          ]
        },
        {
          "providerId": "auth-username-password-form",
          "requirement": "REQUIRED",
          "authenticationFlow": false,
          "config": null,
          "alias": "auth-username-password-form"
        }
      ]
    }
  ],
  "authenticatorConfig": [],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "acr.loa.map": "{}",
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "userManagedAccessAllowed": false
}